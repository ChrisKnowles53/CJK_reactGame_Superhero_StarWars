<mxfile host="65bd71144e">
    <diagram id="sMrqwBWWb_yYgu7MAYVv" name="Page-1">
        <mxGraphModel dx="479" dy="316" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="9" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=14;" parent="1" source="2" target="5" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20" value="props:&lt;br&gt;the api urls&lt;br&gt;relevant info for renderring the different JSON packets" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=12;" parent="9" vertex="1" connectable="0">
                    <mxGeometry x="-0.3475" y="-1" relative="1" as="geometry">
                        <mxPoint x="-2" y="17" as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="2" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;App Landing page&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;br&gt;2 buttons: one for StarWars one for Superhero (think can i have two great iamges that when the cursor hovers they move out towards the cursor)&lt;br&gt;&lt;br&gt;use: useReducer to switch between StarWars and Superhero and return the relevant data specific to the api's (remember the JSON packets are different)&lt;br&gt;&lt;br&gt;The switch can then send props down to the game page which can pass hem on to the children" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
                    <mxGeometry x="180" y="70" width="550" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="computer choice viewer&lt;br&gt;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;use useState to re-render when the state changes - the player invokes the computer to get a new character&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;displays: image, character name &amp;amp; power stat&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="300" y="681" width="180" height="149" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="user choice viewer&lt;br&gt;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;use useState to re-render when the state changes - the player chooses a new character&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;displays: image, character name &amp;amp; power stats&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="70" y="671" width="180" height="149" as="geometry"/>
                </mxCell>
                <mxCell id="10" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=14;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="5" target="4" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="350" y="490" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="19" value="&lt;span style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;props:&lt;/span&gt;&lt;br style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;&lt;span style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;&lt;strike&gt;player choice&lt;/strike&gt;&lt;/span&gt;&lt;br style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;&lt;span style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;json packet data&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=12;" parent="10" vertex="1" connectable="0">
                    <mxGeometry x="-0.1295" y="-2" relative="1" as="geometry">
                        <mxPoint x="-68" y="37" as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="11" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=14;" parent="1" source="5" target="3" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="18" value="&lt;span style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;props:&lt;/span&gt;&lt;br style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;&lt;strike&gt;&lt;span style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;computer choice&lt;/span&gt;&lt;br style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;&lt;/strike&gt;&lt;span style=&quot;font-size: 14px; text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;json packet data&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=12;" parent="11" vertex="1" connectable="0">
                    <mxGeometry x="-0.1833" y="-1" relative="1" as="geometry">
                        <mxPoint x="3" y="23" as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="12" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=14;" parent="1" source="5" target="6" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="26" value="&lt;span style=&quot;text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;props:&lt;/span&gt;&lt;br style=&quot;text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;&lt;span style=&quot;text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;player choice&lt;/span&gt;&lt;br style=&quot;text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;&lt;span style=&quot;text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;computer choice&lt;/span&gt;&lt;br style=&quot;text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;&lt;span style=&quot;text-align: left; background-color: rgb(42, 37, 47);&quot;&gt;json packet data&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=12;" parent="12" vertex="1" connectable="0">
                    <mxGeometry x="0.1304" y="4" relative="1" as="geometry">
                        <mxPoint as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="5" value="&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Render relevant background to choice of game&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;use: useEffect for api call&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;render:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;input for user to input character name with submit button (user will enter a name - would be great if it auto completed depending on what the user starts to type)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;when they press submit then show another button for get computer choice (computer will be random choice by id number)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Render both characters side by side&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Render result showing who won&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
                    <mxGeometry x="180" y="300" width="550" height="205" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="Game logic&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Aways compare player to computer&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Using useReducer? to switch between:&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;compare power if true return win if draw go to next stat&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;compare stat 2 if true return win if draw go to next stat&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;compare stat 3 if true return win if draw return these characters are equally matched&amp;nbsp;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;returns outcome of win loose or draw&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="580" y="660" width="230" height="259" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="Concept - have a game that the user chooses Starwars or Superhero and the app uses the ccorrect api and renders the data, using the minmum number of components" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
                    <mxGeometry x="90" y="10" width="590" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="21" value="&lt;font style=&quot;font-size: 12px;&quot;&gt;Think about can i use dispatch as a prop&lt;/font&gt;" style="text;html=1;strokeColor=#B09500;fillColor=#e3c800;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=12;fontColor=#000000;" parent="1" vertex="1">
                    <mxGeometry x="30" y="530" width="210" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="22" value="&lt;font style=&quot;font-size: 12px;&quot;&gt;do i need a table of character names and ids&lt;/font&gt;" style="ellipse;shape=cloud;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
                    <mxGeometry y="330" width="180" height="110" as="geometry"/>
                </mxCell>
                <mxCell id="23" value="i have not used uesReducer to switch based on outcome of first switch this may not work and may need to be basic if, ifelse statement" style="ellipse;shape=cloud;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
                    <mxGeometry x="555" y="940" width="260" height="110" as="geometry"/>
                </mxCell>
                <mxCell id="27" value="&lt;font style=&quot;font-size: 12px;&quot;&gt;Dont forget validation input allows certain characters and challanege yourself to get an wuto complete working for the name input&lt;/font&gt;" style="ellipse;shape=cloud;whiteSpace=wrap;html=1;fontSize=12;" vertex="1" parent="1">
                    <mxGeometry y="70" width="180" height="110" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>